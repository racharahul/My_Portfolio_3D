{"ast":null,"code":"import { useThree, useLoader } from '@react-three/fiber';\nimport { useEffect } from 'react';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './useTexture.js';\nconst cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\nfunction useKTX2(input) {\n  let basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `${cdn}/basis/`;\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, loader => {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  });\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  useEffect(() => {\n    const array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\nuseKTX2.preload = function (url) {\n  let basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `${cdn}/basis/`;\n  return useLoader.preload(KTX2Loader, url, loader => {\n    loader.setTranscoderPath(basisPath);\n  });\n};\nuseKTX2.clear = input => useLoader.clear(KTX2Loader, input);\nexport { useKTX2 };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}