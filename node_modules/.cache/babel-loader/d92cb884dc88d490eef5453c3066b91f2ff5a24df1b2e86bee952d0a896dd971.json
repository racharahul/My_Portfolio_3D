{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\n// eslint-disable-next-line prettier/prettier\nconst Text = /* @__PURE__ */React.forwardRef((_ref, ref) => {\n  let {\n    sdfGlyphSize = 64,\n    anchorX = 'center',\n    anchorY = 'middle',\n    font,\n    fontSize = 1,\n    children,\n    characters,\n    onSync,\n    ...props\n  } = _ref;\n  // https://github.com/pmndrs/drei/issues/1725\n  const {\n    Text: TextMeshImpl,\n    preloadFont\n  } = suspend(async () => import('troika-three-text'), []);\n  const invalidate = useThree(_ref2 => {\n    let {\n      invalidate\n    } = _ref2;\n    return invalidate;\n  });\n  const [troikaMesh] = React.useState(() => new TextMeshImpl());\n  const [nodes, text] = React.useMemo(() => {\n    const n = [];\n    let t = '';\n    React.Children.forEach(children, child => {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  suspend(() => new Promise(res => preloadFont({\n    font,\n    characters\n  }, res)), ['troika-text', font, characters]);\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  React.useEffect(() => {\n    return () => troikaMesh.dispose();\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    font: font,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY,\n    fontSize: fontSize,\n    sdfGlyphSize: sdfGlyphSize\n  }, props), nodes);\n});\nexport { Text };","map":{"version":3,"names":["_extends","React","useThree","suspend","Text","forwardRef","_ref","ref","sdfGlyphSize","anchorX","anchorY","font","fontSize","children","characters","onSync","props","TextMeshImpl","preloadFont","invalidate","_ref2","troikaMesh","useState","nodes","text","useMemo","n","t","Children","forEach","child","push","Promise","res","useLayoutEffect","sync","useEffect","dispose","createElement","object"],"sources":["D:/portfolio/node_modules/@react-three/drei/core/Text.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\n// eslint-disable-next-line prettier/prettier\nconst Text = /* @__PURE__ */React.forwardRef(({\n  sdfGlyphSize = 64,\n  anchorX = 'center',\n  anchorY = 'middle',\n  font,\n  fontSize = 1,\n  children,\n  characters,\n  onSync,\n  ...props\n}, ref) => {\n  // https://github.com/pmndrs/drei/issues/1725\n  const {\n    Text: TextMeshImpl,\n    preloadFont\n  } = suspend(async () => import('troika-three-text'), []);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const [troikaMesh] = React.useState(() => new TextMeshImpl());\n  const [nodes, text] = React.useMemo(() => {\n    const n = [];\n    let t = '';\n    React.Children.forEach(children, child => {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  suspend(() => new Promise(res => preloadFont({\n    font,\n    characters\n  }, res)), ['troika-text', font, characters]);\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  React.useEffect(() => {\n    return () => troikaMesh.dispose();\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    font: font,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY,\n    fontSize: fontSize,\n    sdfGlyphSize: sdfGlyphSize\n  }, props), nodes);\n});\n\nexport { Text };\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,OAAO,QAAQ,eAAe;;AAEvC;AACA,MAAMC,IAAI,GAAG,eAAeH,KAAK,CAACI,UAAU,CAAC,CAAAC,IAAA,EAU1CC,GAAG,KAAK;EAAA,IAVmC;IAC5CC,YAAY,GAAG,EAAE;IACjBC,OAAO,GAAG,QAAQ;IAClBC,OAAO,GAAG,QAAQ;IAClBC,IAAI;IACJC,QAAQ,GAAG,CAAC;IACZC,QAAQ;IACRC,UAAU;IACVC,MAAM;IACN,GAAGC;EACL,CAAC,GAAAV,IAAA;EACC;EACA,MAAM;IACJF,IAAI,EAAEa,YAAY;IAClBC;EACF,CAAC,GAAGf,OAAO,CAAC,YAAY,MAAM,CAAC,mBAAmB,CAAC,EAAE,EAAE,CAAC;EACxD,MAAMgB,UAAU,GAAGjB,QAAQ,CAACkB,KAAA;IAAA,IAAC;MAC3BD;IACF,CAAC,GAAAC,KAAA;IAAA,OAAKD,UAAU;EAAA,EAAC;EACjB,MAAM,CAACE,UAAU,CAAC,GAAGpB,KAAK,CAACqB,QAAQ,CAAC,MAAM,IAAIL,YAAY,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACM,KAAK,EAAEC,IAAI,CAAC,GAAGvB,KAAK,CAACwB,OAAO,CAAC,MAAM;IACxC,MAAMC,CAAC,GAAG,EAAE;IACZ,IAAIC,CAAC,GAAG,EAAE;IACV1B,KAAK,CAAC2B,QAAQ,CAACC,OAAO,CAAChB,QAAQ,EAAEiB,KAAK,IAAI;MACxC,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC1DH,CAAC,IAAIG,KAAK;MACZ,CAAC,MAAM;QACLJ,CAAC,CAACK,IAAI,CAACD,KAAK,CAAC;MACf;IACF,CAAC,CAAC;IACF,OAAO,CAACJ,CAAC,EAAEC,CAAC,CAAC;EACf,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EACdV,OAAO,CAAC,MAAM,IAAI6B,OAAO,CAACC,GAAG,IAAIf,WAAW,CAAC;IAC3CP,IAAI;IACJG;EACF,CAAC,EAAEmB,GAAG,CAAC,CAAC,EAAE,CAAC,aAAa,EAAEtB,IAAI,EAAEG,UAAU,CAAC,CAAC;EAC5Cb,KAAK,CAACiC,eAAe,CAAC,MAAM,KAAKb,UAAU,CAACc,IAAI,CAAC,MAAM;IACrDhB,UAAU,CAAC,CAAC;IACZ,IAAIJ,MAAM,EAAEA,MAAM,CAACM,UAAU,CAAC;EAChC,CAAC,CAAC,CAAC;EACHpB,KAAK,CAACmC,SAAS,CAAC,MAAM;IACpB,OAAO,MAAMf,UAAU,CAACgB,OAAO,CAAC,CAAC;EACnC,CAAC,EAAE,CAAChB,UAAU,CAAC,CAAC;EAChB,OAAO,aAAapB,KAAK,CAACqC,aAAa,CAAC,WAAW,EAAEtC,QAAQ,CAAC;IAC5DuC,MAAM,EAAElB,UAAU;IAClBd,GAAG,EAAEA,GAAG;IACRI,IAAI,EAAEA,IAAI;IACVa,IAAI,EAAEA,IAAI;IACVf,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBE,QAAQ,EAAEA,QAAQ;IAClBJ,YAAY,EAAEA;EAChB,CAAC,EAAEQ,KAAK,CAAC,EAAEO,KAAK,CAAC;AACnB,CAAC,CAAC;AAEF,SAASnB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}