{"ast":null,"code":"import { TextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useLayoutEffect, useEffect } from 'react';\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input, onLoad) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(() => {\n    onLoad == null || onLoad(textures);\n  }, [onLoad]);\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  // NOTE: only available for WebGLRenderer\n  useEffect(() => {\n    if ('initTexture' in gl) {\n      const array = Array.isArray(textures) ? textures : [textures];\n      array.forEach(gl.initTexture);\n    }\n  }, [gl, textures]);\n  if (IsObject(input)) {\n    const keyed = {};\n    let i = 0;\n    for (const key in input) keyed[key] = textures[i++];\n    return keyed;\n  } else {\n    return textures;\n  }\n}\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\nexport { IsObject, useTexture };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}